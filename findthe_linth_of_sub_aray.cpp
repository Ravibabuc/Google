#include <iostream>
#include<vector>
using namespace std;

int main()
{
    
   // vector<int> A={343, 291, 963, 165, 152};
    vector<int> A={ 537, 2, 700, 151, 746, 619, 818, 550, 578, 410, 638, 104, 796, 809, 338, 582, 941, 46, 463, 515, 241, 260, 162, 201, 807, 766, 202, 534, 407, 527, 801, 297, 881, 853, 448, 627, 824, 266, 530, 402, 676, 168, 858, 472, 977, 197, 406, 918, 243, 869, 785, 836, 482, 947, 38, 289, 65, 592, 175, 473, 119, 328, 122, 353, 182, 570, 332, 6, 836, 862, 761, 864, 382, 619, 689, 359, 168, 95, 629, 764, 317, 767, 952, 799, 66, 990, 88, 132, 583, 616, 957, 54, 944, 79, 759, 478, 649, 92, 837, 837, 306, 950, 53, 689, 921, 742, 400, 90, 838, 382, 854, 507, 501, 158, 306, 567, 149, 746, 51, 84, 714, 8, 490, 659, 87, 250, 489, 88, 694, 326, 277, 352, 276, 331, 41, 198, 73, 794, 640, 263, 176, 846, 770, 677, 4, 428, 596, 505, 175, 648, 589, 241, 656, 432, 900, 96, 34, 390, 536, 728, 68, 166, 432, 345, 497, 474, 895, 922, 620, 535, 538, 148, 381, 308, 177, 385, 89, 773, 243, 616, 773, 832, 857, 782, 616, 110, 878, 650, 852, 766, 730, 920, 932, 163, 617, 781, 989, 512, 704, 609, 399, 242, 757, 132, 902, 934, 870, 343, 59, 113, 959, 833, 297, 817, 615, 914, 927, 845, 564, 131, 611, 647, 51, 896, 810, 669, 677, 151, 533, 733, 760, 285, 327, 869, 417, 230, 155, 639, 925, 566, 752, 885, 399, 50, 54, 366, 316, 333, 211, 880, 464, 175, 879, 515, 423, 689, 536, 100, 192, 422, 186, 952, 59, 513, 173, 828, 95, 680, 468, 21, 247, 572, 906, 998, 622, 312, 365, 938, 645, 928, 171, 461, 455, 402, 328, 878, 444, 217, 331, 636, 991, 517, 941, 50, 382, 114, 878, 478, 147, 698, 499, 394, 271, 757, 744, 245, 69, 461, 536, 66, 742, 59, 527, 197, 461, 855, 428, 905, 72, 111, 542, 63, 980, 483, 465, 362, 597, 696, 840, 96, 394, 691, 490, 17, 800, 587, 263, 221, 48, 151, 287, 790, 210, 166, 340, 671, 374, 120, 577, 798, 231, 119, 214, 211, 602, 679, 925, 551, 727, 118, 0, 474, 809, 842, 491, 962, 429, 106, 183, 830, 257, 471, 620, 467, 989, 312, 491, 363, 432, 68, 162, 15, 539, 728, 226, 493, 407, 152, 396, 487, 270, 396, 961, 431, 239, 452, 393, 668, 911, 577, 498, 520, 400, 471, 988, 741, 135, 479, 105, 568, 899, 619, 583, 438, 699, 162, 931, 458, 666, 679, 945, 288, 76, 906, 71, 315, 711, 465, 335, 622, 394, 186, 142, 146, 9, 482, 239, 144, 313, 344, 64, 564, 315, 0, 2, 366, 162, 285, 825, 180, 965, 770, 468, 41, 677, 539, 708, 740, 356, 43, 362, 102, 581, 856, 600, 590, 691, 840, 735, 4, 536, 799, 569, 204, 799, 923, 570, 313, 561, 395, 493, 526, 166, 313, 919, 195, 205, 979, 935, 561, 374, 649, 16, 956, 857, 616, 546, 548, 456, 281, 905, 345, 433, 826, 549, 584, 101, 119, 250, 662, 515, 95, 540, 33, 409, 811, 228, 614, 790, 515, 527, 517, 516, 543, 473, 373, 512, 19, 274, 320, 653, 531, 665, 86, 709, 214, 22, 810, 686, 272, 825, 553, 368, 717, 586, 129, 529, 166, 743, 671, 33, 622, 188, 549, 518, 661, 274, 30, 33, 900, 350, 686, 431, 16, 124, 140, 582, 498, 951, 268, 123, 128, 821, 491, 845, 759, 620, 374, 925, 715, 398, 310, 337, 938, 859, 855, 600, 486, 237, 985, 386, 588, 23, 818, 956, 499, 310, 890, 997, 613, 511, 120, 741, 684, 963, 587, 444, 935, 313, 721, 2, 63, 384, 340, 2, 243, 547, 954, 81, 785, 939, 468, 725, 314, 638, 33, 813, 300, 923, 162, 914, 786, 635, 7, 471, 950, 946, 267, 886, 612, 340, 888, 675, 724, 580, 677, 320, 480, 983, 401, 617, 922, 221, 342, 588, 211, 727, 753, 512, 2, 916, 778, 789, 903, 785, 260, 853, 84, 879, 91, 696, 219, 980, 723, 944, 912, 753, 616, 392, 736, 17, 9, 11, 591, 703, 599, 802, 430, 353, 314, 785, 621, 444, 574, 524, 582, 186, 729, 666, 65, 821, 714, 636, 153, 789, 932, 65, 542, 548, 810, 279, 918, 819, 642, 509, 875, 241, 311, 657, 946, 978, 442, 567, 422, 16, 443, 356, 554, 525, 22, 971, 346, 88, 608, 851, 878, 892, 916, 772, 441, 726, 51, 359, 898, 45, 868, 773, 287, 531, 430, 585, 509, 225, 505, 284, 593, 948, 640, 148, 473, 15, 119, 171, 455, 79, 22, 685, 972, 291, 458, 765, 369, 861, 476, 267, 907, 696, 392, 546, 227, 175, 131, 89, 400, 636, 725, 993, 937, 365, 141, 762, 732, 613, 286, 540, 692, 308, 225, 16, 951, 683, 133, 321, 545, 609, 940, 452, 305, 333, 998, 533, 508, 481, 974, 908, 118, 699, 901, 407, 416, 395, 169, 149, 8, 807, 41, 52, 468, 266, 421, 419, 950, 554, 92, 847, 164, 33, 299, 469, 366, 649, 354, 874, 130, 328, 134, 600, 379, 387, 359, 796, 782, 881, 297, 790, 688, 338, 195, 156, 604, 616, 928, 906, 170, 20, 753, 686, 53, 404, 508, 771, 405, 214, 997, 888, 543, 131, 840, 274, 519, 200, 70, 301, 81, 719, 444, 121, 57, 991, 630, 14, 607, 558, 272, 129, 578, 378, 168, 984, 782, 676, 755, 540, 890, 753, 428, 785, 236, 620, 60, 755, 820, 482, 409, 253, 202, 205, 727, 611, 196, 357, 977, 803, 915, 250, 284, 845, 628, 452, 829, 762, 480, 937, 302, 371, 690, 82, 508, 278, 703, 920, 34, 523, 403, 795, 129, 957, 0, 856, 568, 196, 213, 546, 351, 128, 148, 987, 973, 776, 792, 155, 890, 272, 92, 193, 995, 134, 627, 504, 412, 330, 424, 798, 206, 179, 593, 335, 488, 945, 543, 57, 493, 756, 955, 196, 236, 455, 184, 561, 583, 976, 716, 473, 600, 160, 18, 596, 294, 646, 452, 707, 976, 228, 505, 182, 760, 451, 869, 248, 396, 412, 657, 890, 520, 964, 86, 108, 419, 622, 22, 2, 950, 738, 828, 551, 251, 846, 499, 545, 492, 303, 252, 821, 531, 110, 355, 291, 561, 225, 540, 309, 989, 549, 199, 862, 514, 638, 970, 933, 612, 992, 288, 915, 83, 116, 818, 686, 962, 317, 231, 455, 620, 836, 628, 503, 946, 983, 795, 859, 208, 687, 168, 550, 236, 720, 412, 102, 710, 734, 36, 322, 79, 324, 237, 514, 440, 55, 200, 754, 724, 783, 561, 696, 619, 189, 200, 565, 173, 347, 424, 733, 386, 945, 283, 974, 665, 47, 77, 375, 134, 113, 49, 565, 789, 287, 79, 581, 694, 631, 335, 419, 414, 249, 467, 34, 438, 667, 951, 963, 366, 728, 697, 752, 673, 332, 727, 338, 732, 804, 65, 866, 269, 114, 431, 58, 753, 862, 991, 448, 493, 678, 219, 259, 927, 686, 293, 718, 706, 597, 681, 72, 325, 730, 177, 350, 63, 904, 688, 795, 60, 105, 661, 329, 219, 444, 739, 973, 306, 730, 773, 151, 760, 344, 762, 688, 382, 408, 758, 88, 5, 439, 513, 330, 170, 690, 680, 585, 594, 720, 380, 654, 177, 393, 335, 396, 189, 74, 721, 847, 156, 846, 998, 916, 190, 760, 956, 573, 520, 714, 13, 525, 506, 526, 207, 676, 568, 239, 261, 162, 311, 993, 168, 488, 386, 855, 237, 927, 929, 958, 774, 437, 157, 772, 706, 699, 884, 14, 624, 405, 729, 638, 282, 587, 516, 490, 615, 85, 81, 228, 599, 393, 221, 768, 881, 959, 975, 118, 886, 905, 429, 660, 694, 586, 784, 400, 285, 20, 767, 262, 777, 496, 900, 60, 435, 768, 902, 50, 853, 983, 278, 805, 376, 851, 573, 258, 810, 900, 728, 48, 805, 157, 708, 852, 95, 844, 604, 733, 864, 371, 995, 642, 219, 895, 54, 654, 15, 956, 704, 869, 939, 334, 674, 668, 185, 599, 278, 347, 499, 6, 395, 657, 164, 455, 861, 611, 299, 465, 344, 516, 837, 339, 158, 56, 586, 564, 63, 602, 520, 119, 823, 811, 454, 849, 831, 991, 800, 109, 339, 651, 116, 86, 308, 632, 542, 521, 243, 193, 987, 940, 709, 176, 279, 219, 584, 218, 783, 647, 820, 655, 767, 995, 819, 573, 844, 650, 916, 644, 112, 255, 647, 580, 342, 308, 564, 236, 829, 159, 429, 816, 99, 491, 992, 379, 62, 929, 949, 846, 576, 769, 853, 695, 116, 24, 620, 960, 27, 537, 956, 139, 144, 603, 71, 486, 263, 635, 74, 93, 794, 856, 261, 894, 699, 606, 625, 761, 535, 574, 959, 111, 695, 813, 159, 811, 189, 779, 123, 216, 668, 431, 707, 813, 386, 130, 651, 650, 765, 726, 743, 560, 934, 4, 806, 633, 610, 783, 394, 497, 357, 354, 961, 404, 519, 120, 567, 708, 251, 42, 277, 920, 473, 336, 733, 859, 467, 736, 861, 232, 462, 956, 144, 748, 313, 302, 381, 275, 85, 776, 773, 794, 482, 734, 198, 1, 206, 117, 61, 457, 159, 690, 729, 632, 27, 814, 844, 846, 551, 57, 430, 365, 14, 575, 114, 327, 229, 495, 602, 315, 623, 727, 109, 105, 461, 660, 106, 667, 777, 520, 477, 937, 210, 206, 921, 589, 21, 765, 435, 924, 175, 866, 289, 189, 793, 403, 868, 22, 899, 470, 337, 522, 198, 799, 628, 11, 459, 86, 679, 588, 958, 508, 877, 169, 714, 799, 758, 87, 916, 194, 11, 91, 412, 301, 280, 205, 704, 500, 579, 955, 971, 269, 478, 521, 68, 458, 532, 879, 896, 563, 819, 855, 71, 697, 376, 138, 496, 134, 225, 412, 680, 589, 856, 92, 890, 488, 649, 946, 989, 229, 902, 960, 498, 732, 833, 918, 542, 717, 797, 790, 633, 616, 997, 56, 665, 373, 194, 161, 860, 772, 926, 540, 361, 782, 985, 603, 270, 634, 549, 259, 863, 803, 571, 713, 535, 404, 631, 429, 474, 780, 220, 107, 749, 217, 515, 414, 943, 710, 928, 803, 834, 854, 343, 195, 636, 680, 150, 906, 315, 699, 166, 530, 503, 737, 244, 390, 494, 227, 820, 968, 360, 392, 427, 109, 961, 942, 875, 904, 4, 803, 707, 838, 657, 403, 385, 293, 83, 535, 552, 750, 587, 718, 281, 442, 807, 877, 832, 653, 104, 4, 621, 464, 396, 400, 925, 358, 695, 153, 614, 699, 956, 322, 890, 966, 77, 275, 259, 512, 163, 163, 263, 750, 881, 896, 192, 41, 773, 376, 694, 229, 381, 668, 46, 129, 420, 971, 839, 115, 124, 454, 167, 433, 128, 57, 399, 205, 684, 10, 717, 847, 174, 332, 949, 407, 228, 493, 800, 1, 870, 495, 583, 251, 515, 629, 732, 935, 952, 572, 51, 429, 26, 218, 862, 154, 627, 613, 359, 311, 975, 428, 511, 149, 761, 460, 909, 341, 954, 709, 695, 176, 204, 278, 427, 71, 907, 159, 7, 211, 83, 58, 640, 109, 628, 854, 263, 255, 819, 974, 566, 795, 403, 429, 296, 516, 890, 205, 857, 196, 267, 552, 372, 823, 830, 151, 895, 89, 662, 902, 653, 746, 312, 645, 855, 940, 500, 471, 547, 671, 445, 465, 466, 200, 895, 115, 716, 785, 672, 926, 333, 939, 478, 705, 763, 661, 208, 658, 102, 870, 912, 755, 968, 224, 401, 824, 516, 253, 647, 63, 924, 92, 880, 743, 293, 775, 858, 361, 912, 530, 287, 245, 822, 118, 302, 585, 779, 510, 595, 881, 733, 507, 989, 701, 83, 742, 877, 599, 995, 876, 14, 271, 969, 894, 14, 614, 670, 224, 327, 934, 107, 615, 180, 929, 85, 834, 866, 864, 697, 461, 97, 782, 320, 438, 835, 403, 180, 713, 354, 175, 941, 368, 799, 910, 614, 813, 876, 284, 390, 556, 571, 849, 523, 103, 130, 608, 937, 348, 472, 986, 161, 921, 768, 481, 360, 604, 236, 892, 669, 590, 68, 610, 310, 867, 873, 924, 32, 101, 209, 774, 657, 132, 975, 180, 235, 105, 788, 172, 453, 612, 159, 614, 886, 279, 447 };
    int min=0;
    int max=0;
    int max_s=0;
    int min_s =0;
    int length =A.size();
     min_s =A[0];
    max_s =A[0];
    int right=0;
    int left=0;
        

   // std::cout <<" max ="  <<max_s<< std::endl;
     //   std::cout <<" min ="  <<min_s<< std::endl;
    for (int i = 1; i < A.size(); i++)
    {
       // std::cout <<" max ="  <<max_s<< std::endl;
        //std::cout <<" min ="  <<min_s<< std::endl;
        //std::cout <<" A[i] ="  <<A[i]<< std::endl;

        // if the current element is greater than the maximum found so far
        if (A[i] > max_s) {
            max_s = A[i];
        }
 
        // if the current element is smaller than the minimum found so far
        else if (A[i] < min_s) {
            min_s = A[i];
        }
    }
   //std::cout <<" max ="  <<max_s<< std::endl;
     //   std::cout <<" min ="  <<min_s<< std::endl;
    
   std::cout <<" max ="  <<max_s<< std::endl;
      std::cout <<" min ="  <<min_s<< std::endl;
        
    int minp =0; 
    int maxp=0;
    for (int i =0;i<A.size();i++)
    {
        int minfound=0;
        if(A[i]==min_s)
        {
          minp=i;   
          minfound=1;
          cout <<" found "<<endl;
        }
        if (minfound ==1)
        {
            cout <<"i"<<i<<"A "<<A.size()<<endl;
            int j=0;
            if(i == A.size()-1)
            {
                j=A.size()-1;
                left =1;
                right=0;
            }
            else
            {
                right =1;
                j= i+1;
                left=0;
            }
            
            if (right == 1)
            {
             for( j= i+1; j < A.size();j++)
             {
              //cout <<"i ddd"<<i<<"A "<<A.size()<<endl;

            
                 if(A[j]==max_s)
                 {
                     maxp=j-(i % (A.size()-1) )+1;
                     
                     cout<<"i =maxxxx"<<i <<" j "<<j<<endl;
                     int c =maxp;
                     cout <<"c ="<<c<<endl;
                            cout <<"length 11="<<length<<endl;
    
                     if (c < length)
                     {
                      length =c;
                     }
                            cout <<"length ggg ="<<length<<endl;
    
                     left =1;
                     
                   j= i+1;
                   break;
                }
                else if (j== A.size()-1)
                {
                    cout <<"reight not ggg ="<<length<<endl;
                  left =1;
                   j= i+1;
                
                  
                }
                
             }
        }
        
        
         if (left == 1)
            {
             for( ; j >=0;j--)
             {
              cout <<"i left ddd jj  "<<j<<"A "<<A.size()<<endl;

            
                 if(A[j]==max_s)
                 {
                     maxp=abs(j-i )+1;
                     
                     cout<<"i =maxxxx"<<i <<" j "<<j<<endl;
                     int c =maxp;
                     cout <<"c ="<<c<<endl;
                            cout <<"length 11="<<length<<endl;
    
                     if (c < length)
                     {
                      length =c;
                     }
                            cout <<"length ggg ="<<length<<endl;
    
                     break;
                }
             }
        }
        }
       //cout <<"length ="<<length<<endl;
    }

    return length;
}
